class o{constructor(){this._link="http://localhost:3000",this._headers={"Content-Type":"application/json"}}_checkError(e){return e.status>=500?Promise.reject("Ошибка в работе сервера."):e.json().then(t=>e.ok?t:Promise.reject(`${t.message||"не обработанная ошибочка"}, status:: ${e.status}`))}createRoom(e){return fetch(`${this._link}/create-room`,{method:"POST",headers:this._headers,body:JSON.stringify(e)}).then(this._checkError)}async connectToWs(e,t,s){try{return new WebSocket(`ws://localhost:${e}?userId=${t}&userName=${s}`)}catch(r){return console.log(r),Promise.reject("fail ws")}}async getRooms(){return fetch(`${this._link}/get-rooms`,{method:"GET",headers:this._headers}).then(this._checkError)}}const i=new o,n="_form_ybwo4_1",c="_inputNum_ybwo4_45",a={form:n,inputNum:c};export{i as a,a as s};
